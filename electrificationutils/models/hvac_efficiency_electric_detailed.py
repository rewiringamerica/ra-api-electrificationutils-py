# coding: utf-8

"""
    smallmodelsapi

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self


class HvacEfficiencyElectricDetailed(str, Enum):
    """
    Various efficiency standards for electrical HVAC equipment.
    """

    """
    allowed enum values
    """
    SEER_MINUS__ENERGY_STAR_SEPT_2015_TO_PRESENT = 'SEER - ENERGY STAR Sept 2015 to present'
    SEER_MINUS__ENERGY_STAR_2006_THRU_AUG_2015 = 'SEER - ENERGY STAR 2006 thru Aug 2015'
    SEER_MINUS__2015_OR_NEWER_LEFT_PARENTHESIS_SOUTH_RIGHT_PARENTHESIS = 'SEER - 2015 or newer (South)'
    SEER_MINUS__2015_OR_NEWER_LEFT_PARENTHESIS_NORTH_RIGHT_PARENTHESIS = 'SEER - 2015 or newer (North)'
    SEER_MINUS__2006_TO_2014 = 'SEER - 2006 to 2014'
    SEER_MINUS__1992_THROUGH_2005 = 'SEER - 1992 through 2005'
    SEER_MINUS__PRIOR_TO_1992 = 'SEER - Prior to 1992'
    SEER_MINUS__MINI_MINUS_SPLIT_SLASH__DUCTLESS_LEFT_PARENTHESIS_ALL_YEARS_RIGHT_PARENTHESIS = 'SEER - Mini-split / Ductless (All years)'
    HSPF_MINUS__ENERGY_STAR_SEPT_2015_TO_PRESENT = 'HSPF - ENERGY STAR Sept 2015 to present'
    HSPF_MINUS__ENERGY_STAR_2006_THRU_AUG_2015 = 'HSPF - ENERGY STAR 2006 thru Aug 2015'
    HSPF_MINUS__2015_OR_NEWER = 'HSPF - 2015 or newer'
    HSPF_MINUS__2006_TO_2014 = 'HSPF - 2006 to 2014'
    HSPF_MINUS__1992_THROUGH_2005 = 'HSPF - 1992 through 2005'
    HSPF_MINUS__PRIOR_TO_1992 = 'HSPF - Prior to 1992'
    HSPF_MINUS__MINI_MINUS_SPLIT_SLASH__DUCTLESS_LEFT_PARENTHESIS_ALL_YEARS_RIGHT_PARENTHESIS = 'HSPF - Mini-split / Ductless (All years)'
    EER_MINUS__WINDOW_A_SLASH_C = 'EER - Window A/C'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of HvacEfficiencyElectricDetailed from a JSON string"""
        return cls(json.loads(json_str))


